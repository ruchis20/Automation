buildscript {
    repositories {
        mavenCentral()
        jcenter { url "http://jcenter.bintray.com" }
    }
    dependencies {
        classpath("com.github.samueltbrown:gradle-cucumber-plugin:0.9")
        classpath("info.cukes:cucumber-groovy:1.2.4")
    }
}

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.github.samueltbrown.cucumber'

repositories {
    mavenCentral()
    jcenter { url "http://jcenter.bintray.com" }
}
configurations {
    cucumberRuntime.extendsFrom(testRuntime)
    functionalCompile.extendsFrom testCompile
    functionalRuntime.extendsFrom testRuntime
}
dependencies {

    def cucumberVersion = "1.2.4"
    cucumberRuntime files("${jar.archivePath}")

    compile 'junit:junit:4.11'
    compile "info.cukes:cucumber-junit:${cucumberVersion}"
    compile "info.cukes:cucumber-groovy:${cucumberVersion}"
    compile 'mysql:mysql-connector-java:5.1.6'
    compile 'org.codehaus.groovy:groovy-json:2.4.5'
    compile 'commons-net:commons-net:3.6'
    compile 'org.apache.ant:ant-jsch:1.10.1'
    compile 'com.jcraft:jsch:0.1.54'
    runtime files('lib/ojdbc6.jar')

    cucumberRuntime "info.cukes:cucumber-groovy:${cucumberVersion}"
    compile 'org.codehaus.groovy:groovy-all:2.4.5'
    testCompile 'org.testng:testng:6.9.4'
    functionalCompile 'junit:junit:4.11'
    functionalCompile "info.cukes:cucumber-junit:${cucumberVersion}"
    functionalCompile "info.cukes:cucumber-groovy:${cucumberVersion}"
    functionalRuntime "info.cukes:cucumber-groovy:${cucumberVersion}"
}
sourceSets {
    ft{
        groovy.srcDir file('src/functional/groovy')
        resources.srcDir file('src/functional/resources')
        compileClasspath = sourceSets.main.output + configurations.functionalCompile
        runtimeClasspath = output + compileClasspath + configurations.functionalRuntime
    }
}
task runTest(type: JavaExec) {

    main = 'cucumber.api.cli.Main'
    classpath = configurations.cucumberRuntime + sourceSets.ft.runtimeClasspath
    def unixUser = project.properties['username']
    def unixPass = project.properties['password']
    def db = project.properties['db']
    systemProperties = System.getProperties()
    systemProperties.put("unix_username", unixUser)
    systemProperties.put("unix_password", unixPass)
    systemProperties.put("db", db)

    def tags = project.properties['tags'] ?: '@feature'

    args = ['--plugin','pretty',
            '--plugin','html:build/reports/tests/',
            '--plugin','json:build/reports/tests/functional.json',
            '--plugin','junit:build/reports/tests/functional.xml',
            '--tags','~@todo',
            '--tags',''+tags+'',
            '--glue','src/functional/groovy','src/functional/resources/']
}


